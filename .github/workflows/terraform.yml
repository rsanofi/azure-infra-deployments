name: Terraform CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  dev-plan:
    name: Dev Plan
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: dev
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      TF_VAR_environment: dev
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5
      - name: Terraform Format
        run: terraform fmt -check -recursive
      - name: Terraform Init
        run: terraform init -backend-config=environments/${{ env.ENVIRONMENT }}/backend.config

      - name: Terraform Validate (Lint)
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -var-file=environments/${{ env.ENVIRONMENT }}/${{ env.ENVIRONMENT }}.tfvars -out=tfplan-${{ env.ENVIRONMENT }}.out

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ env.ENVIRONMENT }}
          path: tfplan-${{ env.ENVIRONMENT }}.out

  dev-apply:
    name: Dev Apply
    needs: dev-plan
    runs-on: ubuntu-latest
    environment:
      name: Development
    env:
      ENVIRONMENT: dev
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      TF_VAR_environment: dev
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5
      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan-${{ env.ENVIRONMENT }}
      - name: Terraform Init
        run: terraform init -backend-config=environments/${{ env.ENVIRONMENT }}/backend.config
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan-${{ env.ENVIRONMENT }}.out
        
  prod-plan:
    name: Prod Plan
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: prod
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      TF_VAR_environment: prod
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5
      - name: Terraform Format
        run: terraform fmt -check -recursive
      - name: Terraform Init
        run: terraform init -backend-config=environments/${{ env.ENVIRONMENT }}/backend.config

      - name: Terraform Validate (Lint)
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -var-file=environments/${{ env.ENVIRONMENT }}/${{ env.ENVIRONMENT }}.tfvars -out=tfplan-${{ env.ENVIRONMENT }}.out

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ env.ENVIRONMENT }}
          path: tfplan-${{ env.ENVIRONMENT }}.out

  prod-apply:
    name: Prod Apply
    runs-on: ubuntu-latest
    needs: prod-plan
    environment:
      name: Production
    env:
      ENVIRONMENT: prod
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      TF_VAR_environment: prod
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5
          
      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan-${{ env.ENVIRONMENT }}

      - name: Terraform Init
        run: terraform init -backend-config=environments/${{ env.ENVIRONMENT }}/backend.config

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan-${{ env.ENVIRONMENT }}.out
        
